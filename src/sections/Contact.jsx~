import React, { useRef, useState } from 'react';
import emailjs from '@emailjs/browser';
import { toast } from 'react-hot-toast';

const Contact = () => {
    const formRef = useRef();
    const [form, setForm] = useState({
        name: '',
        email: '',
        message: '',
    });
    const [loading, setLoading] = useState(false);

    const handleChange = ({ target: { name, value } }) => {
        setForm({ ...form, [name]: value });
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        setLoading(true);

        try {
            const serviceID = "service_qd84rbd";
            const publicKey = "5xAiIabULD08aIhfG";
            await emailjs.send(
                serviceID,
                "template_pdp2scn",
                {
                    from_name: form.name,
                    to_name: "Teimur Terchyyev",
                    from_email: form.email,
                    to_email: "teimur.terchiev@gmail.com",
                    message: form.message,
                },
                publicKey
            );
            setLoading(false);
            setForm({ name: '', email: '', message: '' });
            alert("Thank you! I will get back to you as soon as possible.");
        } catch (error) {
            setLoading(false);
            console.error(error);
            alert("Ahh, something went wrong. Please try again.");
        }
    };

    return (
        <section className="relative min-h-screen flex flex-col items-center justify-center px-4 sm:px-6 lg:px-8" id="contact">
            {/* Background Image */}
            <div className="absolute inset-0 w-full h-full">
                <img
                    src="/assets/terminal.png"
                    alt="terminal background"
                    className="w-full h-full object-cover"
                />
                {/* Dark Overlay for Better Readability */}
                <div className="absolute inset-0 bg-black bg-opacity-60"></div>
            </div>

            {/* Contact Form */}
            <div className="relative z-10  p-6 rounded-lg max-w-lg w-full">
                <h3 className="text-2xl font-bold text-white text-center mb-4">Let&apos;s Talk</h3>
                <p className="text-lg text-gray-300 text-center mb-6">
                    I&apos;d love to hear from you! Whether you have a question, want to collaborate, or bring a unique project to life, feel free to reach out.
                </p>

                <form ref={formRef} onSubmit={handleSubmit} className="flex flex-col space-y-5">
                    <label>
                        <span className="text-white font-semibold mb-7">Full Name</span>
                        <input
                            type="text"
                            name="name"
                            value={form.name}
                            onChange={handleChange}
                            required
                            placeholder="Salazar Toress"
                            className="w-full p-3 mt-3 rounded-lg bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-green-500"
                        />
                    </label>

                    <label>
                        <span className="text-white font-semibold">Email</span>
                        <input
                            type="email"
                            name="email"
                            value={form.email}
                            onChange={handleChange}
                            required
                            placeholder="salazar.toress@gmail.com"
                            className="w-full p-3 mt-3 rounded-lg bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-green-500"
                        />
                    </label>

                    <label>
                        <span className="text-white font-semibold">Message</span>
                        <textarea
                            rows={5}
                            name="message"
                            value={form.message}
                            onChange={handleChange}
                            required
                            placeholder="Hi, I am interested in...."
                            className="w-full p-3  mt-3 rounded-lg bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-green-500"
                        />
                    </label>

                    <button
                        className="w-full bg-neutral-600 hover:border-b-4  hover:border-b-green-500 hover:bg-purple-800
                        text-white font-bold py-3 rounded-md transition"
                        type="submit"
                        disabled={loading}
                    >
                        {loading ? "Sending..." : "Send Message"}
                    </button>
                </form>
            </div>
        </section>
    );
};

export default Contact;
